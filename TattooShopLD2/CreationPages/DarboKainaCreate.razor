@page "/darbokainos/create"

@inject DataAccessMySql _data
@inject IConfiguration _config
@inject NavigationManager NavigationManager

<h3>Sukurti naujus darbo kainos įrašus</h3>
<br />
@for(int i = 0; i < counter; i++)
{ 
    <EditForm Model="@darbokainaModelList">
        <div class="form-group row col-md-10"> 
            <div class="col-md-2">
                <label for="kaina"> Kaina </label>
                <InputNumber id="kaina" @bind-Value="darbokainaModelList[i].pk_Kaina" placeholder="pvz. 500"></InputNumber>
            </div>
            <div class="col-md-2">
                <label for="DarboId"> Darbo Id </label>
                <InputSelect id="DarboId" @bind-Value="darbokainaModelList[i].fk_DarbasId">
                    @foreach (var darb in DarboId)
                    {
                        <option value="@darb.pk_DarbasId">@darb.pk_DarbasId</option>
                    }
                </InputSelect>
            </div>
         </div>
    </EditForm>
    <br/>
}
<button class="btn btn-primary"  @onclick="Increment">Pridėti eilutę</button>
<br/>
<div></div>
<br/>
<button class="btn btn-primary" @onclick="Insert">Sukurti naują įrašą</button>

@code {
    DarboKainaModel darnokainaModel = new DarboKainaModel();
    List<DarboKainaModel> darbokainaModelList = new List<DarboKainaModel>();
    int counter = 1;
    List<DarbasModel> DarboId = new List<DarbasModel>();

    private void Increment()
    {
        counter++;
    }
    

    private void Insert()
    {
        string sql =
        "insert into darbo_kaina (kaina, fk_DARBASid_DARBAS) values (?pk_Kaina, ?fk_DarbasId)";
        foreach (var obj in darbokainaModelList)
        {
            if(obj.pk_Kaina != 0)
            {
                DataAccessMySql.Insert(sql, _config.GetConnectionString("default"), args =>
                {
                    args.Add("?pk_Kaina", MySqlDbType.Int32).Value = obj.pk_Kaina;
                    args.Add("?fk_DarbasId", MySqlDbType.Int32).Value = obj.fk_DarbasId;
                });
            }
        }
        NavigationManager.NavigateTo("/darbokainos/create", true);
    }

    protected override async Task OnInitializedAsync()
    {
        for (int i = 0; i < 10; i++)
        {
            darbokainaModelList.Add(new DarboKainaModel
            {
                pk_Kaina = 0,
                fk_DarbasId = 0
            });
        }
        string sql = "select * from darbas";
        var dt = _data.Query(sql, _config.GetConnectionString("default"));
        foreach( DataRow item in dt)
        {
            DarboId.Add(new DarbasModel
                {
                    PraleistasLaikasVal = Convert.ToInt32(item["praleistasLaikasValandomis"]),
                    AntgaliuSk = Convert.ToInt32(item["reikalinguAntgaliuSk"]),
                    AtspausdintuPvzSk = Convert.ToInt32(item["atspausdintuPvzSk"]),
                    SpalvuSk = Convert.ToInt32(item["spalvuSk"]),
                    pk_DarbasId = Convert.ToInt32(item["id_DARBAS"]),
                });
        }
    }
}
